{"ast":null,"code":"const checkPassword = (pas, repPas) => {\n  let low = 0,\n      upper = 0,\n      num = 0;\n\n  for (const ch of pas) {\n    if (ch.toLowerCase() === ch && isNaN(Number(ch))) {\n      low++;\n    }\n\n    if (ch.toUpperCase() === ch && isNaN(Number(ch))) {\n      upper++;\n    }\n\n    if (!isNaN(Number(ch))) {\n      num++;\n    }\n  }\n\n  if (!low) {\n    alert(\"Пароль должен содержать хотя бы одну прописную букву.\");\n    return false;\n  } else if (!upper) {\n    alert(\"Пароль должен содержать хотя бы одну заглавную букву.\");\n    return false;\n  } else if (!num) {\n    alert(\"Пароль должен содержать хотя бы одну цифру.\");\n    return false;\n  } else if (password.length < 10) {\n    alert(\"Пароль должен содержать минимум 10 символов\");\n    return false;\n  }\n\n  if (pas !== repPas) {\n    alert(\"Пароли не совпадают\");\n    return false;\n  }\n\n  return true;\n};\n\nexport { checkPassword };","map":{"version":3,"names":["checkPassword","pas","repPas","low","upper","num","ch","toLowerCase","isNaN","Number","toUpperCase","alert","password","length"],"sources":["C:/GitHub/react_mail/src/components/functions/CheckPassword.js"],"sourcesContent":["\r\nconst checkPassword = (pas, repPas) => {\r\n    let low = 0, upper = 0, num = 0;\r\n    for (const ch of pas) {\r\n        if (ch.toLowerCase() === ch && isNaN(Number(ch))) {\r\n            low++;\r\n        }\r\n        if (ch.toUpperCase() === ch && isNaN(Number(ch))) {\r\n            upper++;\r\n        }\r\n        if (!isNaN(Number(ch))) {\r\n            num++;\r\n        }\r\n    }\r\n    if (!low) {\r\n        alert(\"Пароль должен содержать хотя бы одну прописную букву.\");\r\n        return false;\r\n    } else if (!upper) {\r\n        alert(\"Пароль должен содержать хотя бы одну заглавную букву.\");\r\n        return false;\r\n    } else if (!num) {\r\n        alert(\"Пароль должен содержать хотя бы одну цифру.\");\r\n        return false;\r\n    } else if (password.length < 10) {\r\n        alert(\"Пароль должен содержать минимум 10 символов\");\r\n        return false;\r\n    }\r\n\r\n    if (pas !== repPas){\r\n        alert(\"Пароли не совпадают\");\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nexport  {checkPassword};"],"mappings":"AACA,MAAMA,aAAa,GAAG,CAACC,GAAD,EAAMC,MAAN,KAAiB;EACnC,IAAIC,GAAG,GAAG,CAAV;EAAA,IAAaC,KAAK,GAAG,CAArB;EAAA,IAAwBC,GAAG,GAAG,CAA9B;;EACA,KAAK,MAAMC,EAAX,IAAiBL,GAAjB,EAAsB;IAClB,IAAIK,EAAE,CAACC,WAAH,OAAqBD,EAArB,IAA2BE,KAAK,CAACC,MAAM,CAACH,EAAD,CAAP,CAApC,EAAkD;MAC9CH,GAAG;IACN;;IACD,IAAIG,EAAE,CAACI,WAAH,OAAqBJ,EAArB,IAA2BE,KAAK,CAACC,MAAM,CAACH,EAAD,CAAP,CAApC,EAAkD;MAC9CF,KAAK;IACR;;IACD,IAAI,CAACI,KAAK,CAACC,MAAM,CAACH,EAAD,CAAP,CAAV,EAAwB;MACpBD,GAAG;IACN;EACJ;;EACD,IAAI,CAACF,GAAL,EAAU;IACNQ,KAAK,CAAC,uDAAD,CAAL;IACA,OAAO,KAAP;EACH,CAHD,MAGO,IAAI,CAACP,KAAL,EAAY;IACfO,KAAK,CAAC,uDAAD,CAAL;IACA,OAAO,KAAP;EACH,CAHM,MAGA,IAAI,CAACN,GAAL,EAAU;IACbM,KAAK,CAAC,6CAAD,CAAL;IACA,OAAO,KAAP;EACH,CAHM,MAGA,IAAIC,QAAQ,CAACC,MAAT,GAAkB,EAAtB,EAA0B;IAC7BF,KAAK,CAAC,6CAAD,CAAL;IACA,OAAO,KAAP;EACH;;EAED,IAAIV,GAAG,KAAKC,MAAZ,EAAmB;IACfS,KAAK,CAAC,qBAAD,CAAL;IACA,OAAO,KAAP;EACH;;EAED,OAAO,IAAP;AACH,CAjCD;;AAmCA,SAASX,aAAT"},"metadata":{},"sourceType":"module"}