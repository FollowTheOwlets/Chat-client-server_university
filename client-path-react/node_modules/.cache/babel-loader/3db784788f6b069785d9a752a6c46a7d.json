{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\react_mail\\\\src\\\\components\\\\NewMessage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { Modal } from \"react-bootstrap\";\nimport { Form } from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport { sendMessage } from \"./functions/SendMessage\";\nimport store from \"./store/Store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewMessage = props => {\n  _s();\n\n  const text_message = useRef();\n  const recipients_for_message = useRef();\n  const title_message = useRef();\n  const applyData = store.getState();\n\n  const send = () => {\n    const flag = sendMessage(recipients_for_message.current.value.split(\", \"), title_message.current.value, text_message.current.value, text_message, title_message);\n\n    if (flag) {\n      recipients_for_message.current.value = \"\";\n      title_message.current.value = \"\";\n      text_message.current.value = \"\";\n      props.setShow(false);\n    }\n  };\n\n  const handleClose = () => props.setShow(false);\n\n  const inputChangedHandler = event => {\n    const updatedKeyword = event.target.value; // May be call for search result\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: props.show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"New message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"ID_control\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter ID\",\n            ref: recipients_for_message,\n            value: applyData.id,\n            onChange: event => inputChangedHandler(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"title_control\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Title\",\n            ref: title_message,\n            value: applyData.title,\n            onChange: event => inputChangedHandler(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"text_control\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Message:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            placeholder: \"Your message...\",\n            ref: text_message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          size: \"sm\",\n          onClick: send,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(NewMessage, \"Q716BvQYYKWfecwAXUSln1ABf9s=\");\n\n_c = NewMessage;\nexport default NewMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewMessage\");","map":{"version":3,"names":["React","useRef","Modal","Form","Button","sendMessage","store","NewMessage","props","text_message","recipients_for_message","title_message","applyData","getState","send","flag","current","value","split","setShow","handleClose","inputChangedHandler","event","updatedKeyword","target","show","id","title"],"sources":["C:/GitHub/react_mail/src/components/NewMessage.js"],"sourcesContent":["import React, {useRef} from 'react';\r\nimport {Modal} from \"react-bootstrap\";\r\nimport {Form} from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {sendMessage} from \"./functions/SendMessage\";\r\nimport store from \"./store/Store\";\r\n\r\nconst NewMessage = (props) => {\r\n    const text_message = useRef();\r\n    const recipients_for_message = useRef();\r\n    const title_message = useRef();\r\n    const applyData = store.getState();\r\n    const send = () => {\r\n        const flag = sendMessage(\r\n            recipients_for_message.current.value.split(\", \"),\r\n            title_message.current.value,\r\n            text_message.current.value,\r\n            text_message,\r\n            title_message\r\n        );\r\n        if (flag) {\r\n            recipients_for_message.current.value = \"\";\r\n            title_message.current.value = \"\";\r\n            text_message.current.value = \"\";\r\n            props.setShow(false);\r\n        }\r\n    }\r\n    const handleClose = () => props.setShow(false);\r\n\r\n    const inputChangedHandler = (event) => {\r\n        const updatedKeyword = event.target.value;\r\n        // May be call for search result\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal show={props.show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>New message</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form.Group className=\"mb-3\" controlId=\"ID_control\">\r\n                        <Form.Label>ID:</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Enter ID\"\r\n                            ref={recipients_for_message}\r\n                            value={applyData.id}\r\n                            onChange={(event)=>inputChangedHandler(event)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"title_control\">\r\n                        <Form.Label>Title:</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Title\"\r\n                            ref={title_message}\r\n                            value={applyData.title}\r\n                            onChange={(event)=>inputChangedHandler(event)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"text_control\">\r\n                        <Form.Label>Message:</Form.Label>\r\n                        <Form.Control as=\"textarea\" placeholder=\"Your message...\" ref={text_message}/>\r\n                    </Form.Group>\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" size=\"sm\" onClick={send}>\r\n                        Send\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NewMessage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}